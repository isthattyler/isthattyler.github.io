{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/navbar.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","AboutPage","a","createElement","title","class","to","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Navbar","react_default","Fragment","type","className","href","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","children","_856328897","navbar","paddingTop"],"mappings":"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","file":"component---src-pages-about-js-7a1fbcafa1254215fa77.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../styles/layout.css\"\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst AboutPage = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <h1>About me</h1>\n    <p class=\"subtitle\">The content for this page isn't ready yet. ü§∑‚Äç‚ôÇÔ∏è</p>\n    <p class=\"subtitle\">\n      Go back to&nbsp;\n      <span>\n        <Link to=\"/\">home</Link>\n      </span>{\" \"}\n      for now.\n    </p>\n  </Layout>\n)\n/* eslint-enable jsx-a11y/accessible-emoji */\nexport default AboutPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nconst Navbar = () => (\n  <>\n    <div class=\"menu-wrap\">\n      <input type=\"checkbox\" class=\"toggler\" />\n      <div className=\"hamburger\">\n        <div></div>\n      </div>\n      <div class=\"menu\">\n        <div>\n          <div>\n            <ul>\n              <li>\n                <a href=\"/\">\n                  <span>Home</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"/about\">\n                  <span>About</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"/projects\">\n                  <span>Projects</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"/resume\">\n                  <span>Resume</span>\n                </a>\n              </li>\n              <li>\n                <a href=\"/contact\">\n                  <span>Contact</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </>\n)\nexport default Navbar\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: `auto` }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Navbar from \"./navbar\"\nimport Header from \"./header\"\nimport \"../styles/layout.css\"\nimport \"../styles/menu.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      {/* <Header/> */}\n      <Navbar />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}