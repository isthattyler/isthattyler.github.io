{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-link-js","path":"/links/interviewproblem/interviewproblem/","result":{"data":{"mdx":{"id":"966e05cb-7a65-5026-813a-ec3a93b10fc7","excerpt":"\n This repo is created mainly for me to practice coding. I'm trying to implement the solutions to the problems using  Python  as primaryâ€¦","frontmatter":{"title":"Interview Problem","date":"2019-10-24T00:00:00.000Z","link":"https://github.com/isthattyler/InterviewProblem","tags":["project","code","problemSolving"],"cover":null},"fields":{"slug":"/links/interviewproblem/interviewproblem/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Interview Problem\",\n  \"cover\": \"./image.jpg\",\n  \"date\": \"2019-10-24T00:00:00.000Z\",\n  \"link\": \"https://github.com/isthattyler/InterviewProblem\",\n  \"tags\": [\"project\", \"code\", \"problemSolving\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.codefactor.io/repository/github/isthattyler/interviewproblem\"\n  }), mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"src\": \"https://www.codefactor.io/repository/github/isthattyler/interviewproblem/badge\",\n    \"alt\": \"CodeFactor\"\n  }))), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://img.shields.io/github/languages/count/isthattyler/InterviewProblem?style=plastic\"\n  }), mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"src\": \"https://img.shields.io/github/languages/count/isthattyler/InterviewProblem?style=plastic\",\n    \"alt\": \"Language Count\"\n  })))), mdx(\"p\", null, \"This repo is created mainly for me to practice coding. I'm trying to implement the solutions to the problems using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Python\"), \" as primary language. I'm looking to add code for \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Java\"), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"C\"), \" in the future. The problems are from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.techseries.dev/daily\"\n  }), \"Daily Interview Pro\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"966e05cb-7a65-5026-813a-ec3a93b10fc7"}}}